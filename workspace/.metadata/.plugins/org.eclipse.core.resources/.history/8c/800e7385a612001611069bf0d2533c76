package data;

import org.newdawn.slick.opengl.Texture;
import static helpers.Artist.*;
import static helpers.Clock.*;

import java.util.ArrayList;


public class TowerCannon {
	
	private float x,y, timeSinceLastShot, firingSpeed, angle;
	private int width, height, damage;
	private Texture baseTexture, cannonTexture;
	private Tile startTile;
	private ArrayList<Projectile> projectile;
	private ArrayList<Enemy> enemies;
	private Enemy target;
	
	public TowerCannon(Texture baseTexture, Tile startTile, int damage, ArrayList<Enemy> enemies){
		this.baseTexture = baseTexture;
		this.cannonTexture = quickLoad("gun");
		this.startTile = startTile;
		this.x = startTile.getX();
		this.y = startTile.getY();
		this.width = (int) startTile.getWidth();
		this.height = (int) startTile.getHeight();
		this.damage = damage;
		this.firingSpeed = 3;
		this.timeSinceLastShot = 0;
		this.enemies = enemies;
		this.projectile = new ArrayList<Projectile>();
		this.target = acquireTarget();
		this.angle = calculateAngle();
		
	}
	
	private Enemy acquireTarget(){
		return enemies.get(0);
	}
	
	private float calculateAngle(){
		double angleTemp = Math.atan2(target.getY() - y, target.getX() - x);
		return (float) Math.toDegrees(angleTemp) - 90;
	}
	
	public void shoot(){
		timeSinceLastShot = 0;
		projectile.add(new Projectile(quickLoad("bullet"),target,x+32,y+32,50,10));
	}
	
	public void update(){
		timeSinceLastShot += delta();
		if(timeSinceLastShot  > firingSpeed){
			shoot();
		}
		
		for(Projectile p : projectile){
			p.update();
		}
		
		angle = calculateAngle();
		draw();
	}
	
	public void draw(){
		drawQuadTex(baseTexture,x,y,width,height);
		drawQuadTexRotate(cannonTexture,x,y,width,height,angle);
	}

}
