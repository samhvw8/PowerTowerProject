package data;

import static helpers.Artist.quickLoad;
import static helpers.Artist.drawQuadTex;
import org.lwjgl.input.Mouse;

import UI.Button;
import UI.UI;
import UI.UI.Menu;

import static helpers.Artist.*;

public class Game {

	// hold every component of the game
	private TileGrid grid;
	private Player player;
	private WaveManager waveManager;
	private UI gameUI;
	private Menu towerPickerMenu;
	// private TowerBlue blue;

	// private float test;
	// // temp variable
	// TowerCannon tower;

	public Game(int[][] map) {
		grid = new TileGrid(map);

		waveManager = new WaveManager(
				new Enemy(quickLoad("Ufo"), grid.getTile(2, 9), grid, TILE_SIZE, TILE_SIZE, 70, 25), 2, 10);
		player = new Player(grid, waveManager);
		player.setup();
		setupUI();

	}

	private void setupUI() {
		gameUI = new UI();
//		towerPickerUI.addButton("TowerBlue", "bluetower", 0, 0);
//		towerPickerUI.addButton("TowerIce", "tower", TILE_SIZE, 0);
		gameUI.createMenu("TowerPicker",TILE_SIZE*16,0,128,0,2,0);
		towerPickerMenu = gameUI.getMenu("TowerPicker");
		towerPickerMenu.quickAdd("TowerBlue","bluetower");
		towerPickerMenu.addButton(new Button("TowerIce",quickLoad("tower"),0,0));
	}

	private void updateUI() {
		gameUI.draw();
		if (Mouse.next()) {
			boolean mouseClicked = Mouse.isButtonDown(0);
			if (mouseClicked) {
				if (towerPickerMenu.isButtonClick("TowerBlue")) {
					player.pickTower(new TowerBlue(TowerType.BlueTower, grid.getTile(0, 0),
							waveManager.getCurrentWave().getEnemyList()));
				}
				if (towerPickerMenu.isButtonClick("TowerIce")) {
					player.pickTower(new TowerIce(TowerType.IceTower, grid.getTile(0, 0),
							waveManager.getCurrentWave().getEnemyList()));
				}
			}
		}
	}

	public void update() {
		drawQuadTex(quickLoad("menu_background"),TILE_SIZE*16,0,128,960);
		grid.draw();
		waveManager.update();
		player.update();
		updateUI();

	}

}
